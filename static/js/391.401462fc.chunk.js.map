{"version":3,"file":"static/js/391.401462fc.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/LoginOutlined.js","../node_modules/@ant-design/icons/es/icons/LoginOutlined.js","componets/Login/LoginForm.tsx","componets/Login/LoginPage.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar LoginOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M521.7 82c-152.5-.4-286.7 78.5-363.4 197.7-3.4 5.3.4 12.3 6.7 12.3h70.3c4.8 0 9.3-2.1 12.3-5.8 7-8.5 14.5-16.7 22.4-24.5 32.6-32.5 70.5-58.1 112.7-75.9 43.6-18.4 90-27.8 137.9-27.8 47.9 0 94.3 9.3 137.9 27.8 42.2 17.8 80.1 43.4 112.7 75.9 32.6 32.5 58.1 70.4 76 112.5C865.7 417.8 875 464.1 875 512c0 47.9-9.4 94.2-27.8 137.8-17.8 42.1-43.4 80-76 112.5s-70.5 58.1-112.7 75.9A352.8 352.8 0 01520.6 866c-47.9 0-94.3-9.4-137.9-27.8A353.84 353.84 0 01270 762.3c-7.9-7.9-15.3-16.1-22.4-24.5-3-3.7-7.6-5.8-12.3-5.8H165c-6.3 0-10.2 7-6.7 12.3C234.9 863.2 368.5 942 520.6 942c236.2 0 428-190.1 430.4-425.6C953.4 277.1 761.3 82.6 521.7 82zM395.02 624v-76h-314c-4.4 0-8-3.6-8-8v-56c0-4.4 3.6-8 8-8h314v-76c0-6.7 7.8-10.5 13-6.3l141.9 112a8 8 0 010 12.6l-141.9 112c-5.2 4.1-13 .4-13-6.3z\" } }] }, \"name\": \"login\", \"theme\": \"outlined\" };\nexport default LoginOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LoginOutlinedSvg from \"@ant-design/icons-svg/es/asn/LoginOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar LoginOutlined = function LoginOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LoginOutlinedSvg\n  }));\n};\nLoginOutlined.displayName = 'LoginOutlined';\nexport default /*#__PURE__*/React.forwardRef(LoginOutlined);","import { FC, memo } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { LoginOutlined } from '@ant-design/icons'\nimport { formValidatorAuth } from '../utils/validators'\nimport './Login.css'\n\nexport type LoginFormType = {\n  email: string\n  password: string\n  captcha: string | null\n  rememberMe: boolean\n}\n\ntype PropsType = {\n  captchaUrl: string | null\n  signIn: (formData: LoginFormType) => void\n  errorInfo: string | null\n}\n\nconst LoginForm: FC<PropsType> = memo(({ signIn, captchaUrl, errorInfo }) => {\n  const submit = (\n    values: LoginFormType,\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\n  ) => {\n    setTimeout(() => {\n      signIn(values)\n      setSubmitting(false)\n    }, 400)\n  }\n  return (\n    <div>\n      <LoginOutlined className='login-form__logo' />\n      <h2 className='login-form__h2'>Log in to your account</h2>\n      <p className='login-form__greeting'>\n        Welcome back! Please enter your details.\n      </p>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          rememberMe: false,\n          captcha: null,\n        }}\n        validate={formValidatorAuth}\n        onSubmit={submit}\n      >\n        {({ isSubmitting, handleChange }) => (\n          <Form>\n            <div className='login-form__input-container'>\n              <label htmlFor='email' className='login-form__input-label'>\n                Email\n              </label>\n              <Field\n                type='email'\n                name='email'\n                onChange={handleChange}\n                placeholder='Enter your email'\n                className='login-form__input'\n              />\n              <ErrorMessage name='email' component='div' className='_error' />\n            </div>\n            <div className='login-form__input-container'>\n              <label htmlFor='password' className='login-form__input-label'>\n                Password\n              </label>\n              <Field\n                type='password'\n                name='password'\n                onChange={handleChange}\n                placeholder='Enter your password'\n                className='login-form__input'\n                autoComplete='off'\n              />\n              <ErrorMessage\n                name='password'\n                component='div'\n                className='_error'\n              />\n            </div>\n            <div className='login-form__captcha__container'>\n              {captchaUrl && <img src={captchaUrl} alt='captcha' />}\n              {captchaUrl && (\n                <Field\n                  name='captcha'\n                  onChange={handleChange}\n                  placeholder='Enter symbols from image...'\n                  component='input'\n                  className='login-form__input'\n                />\n              )}\n            </div>\n            {errorInfo && <div className='_error'>{errorInfo}</div>}\n            <div className='login-form__checkbox__container'>\n              <Field\n                type='checkbox'\n                name='rememberMe'\n                component='input'\n                className='login-form__checkbox'\n              />\n              <span>&ensp;remember for 30 days</span>\n              <NavLink className='login-form__link' to={'#'}>\n                Forgot password\n              </NavLink>\n            </div>\n            <button\n              type='submit'\n              disabled={isSubmitting}\n              className='login-form__btn btn _hover'\n            >\n              Submit\n            </button>\n            <div className='login-form__sign-up__link__container'>\n              Don't have an account?&ensp;\n              <NavLink to={'#'} className='login-form__link'>\n                Sign up\n              </NavLink>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n})\n\nexport default LoginForm\n","import { FC, memo, useEffect } from 'react'\nimport { AnyAction, AsyncThunkAction } from '@reduxjs/toolkit'\nimport { Navigate } from 'react-router-dom'\nimport { signIn } from '../../redux/reducers/authReducer'\nimport {\n  getCapthcaUrl,\n  getError,\n  getIsAuth,\n} from '../../redux/selectors/authSelectors'\nimport { useAppDispatch, useAppSelector } from '../../Types/Types'\nimport LoginForm, { LoginFormType } from './LoginForm'\nimport './Login.css'\n\nconst LoginPage: FC = memo(() => {\n  const authInfo = useAppSelector(getIsAuth)\n  const captchaUrl = useAppSelector(getCapthcaUrl)\n  const errorInfo = useAppSelector(getError)\n\n  const dispatch = useAppDispatch()\n\n  const signInD = (formData: LoginFormType) => {\n    dispatch(signIn(formData) as AsyncThunkAction<void, object, {}> & AnyAction)\n  }\n\n  useEffect(() => {}, [authInfo])\n\n  if (authInfo) return <Navigate to={'/Profile'} />\n\n  return (\n    <div>\n      <h1>LOG IN</h1>\n      <div className='login-form__wrapper'>\n        <LoginForm\n          captchaUrl={captchaUrl}\n          errorInfo={errorInfo}\n          signIn={signInD}\n        />\n      </div>\n    </div>\n  )\n})\n\nexport default LoginPage\n"],"names":["LoginOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LoginOutlinedSvg","displayName","memo","signIn","captchaUrl","errorInfo","className","initialValues","email","password","rememberMe","captcha","validate","formValidatorAuth","onSubmit","values","setSubmitting","setTimeout","isSubmitting","handleChange","htmlFor","type","name","onChange","placeholder","component","autoComplete","src","alt","to","disabled","authInfo","useAppSelector","getIsAuth","getCapthcaUrl","getError","dispatch","useAppDispatch","useEffect","formData"],"sourceRoot":""}