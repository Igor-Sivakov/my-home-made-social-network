{"version":3,"file":"static/js/371.420317d8.chunk.js","mappings":"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","sources":["componets/Dialogs/DialogListItem/DialogListItem.jsx","componets/Dialogs/UserItem/UserItem.jsx","componets/Dialogs/Messages/Messages.jsx","componets/Dialogs/Messages/InvertMessage/InvertMessage.jsx","componets/Dialogs/MessageForm/MessageForm.jsx","componets/Dialogs/Dialogs.jsx","redux/selectors/dialogsSelectors.js","componets/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport './DialogListItem.css';\nimport userAvatar from './../../../img/userAvatar.jpeg';\n\nconst DialogListItem = ({ state: { name, photos, id } }) => {\n  let path = '/Dialogs/' + id;\n  return (\n    <li className='dialogList__item'>\n      <div className='dialogList__item__boxForPoint'>\n        <div className='dialogList__point'></div>\n        <NavLink to={path} className='dialogList__item__conteiner'>\n          <img\n            src={photos.small ? photos.small : userAvatar}\n            className='dialogList__avatar'\n            alt='avatar'\n          ></img>\n          <p className='dialogList__name'>{name}</p>\n        </NavLink>\n      </div>\n    </li>\n  );\n};\n\nexport default DialogListItem;\n","import './UserItem.css';\n\nconst UserItem = ({ state: { avatar, name } }) => {\n  return (\n    <div className='userItem__avatar'>\n      <img src={avatar} alt='message-avatar' />\n      <p className='userItem__name'>{name}</p>\n    </div>\n  );\n};\n\nexport default UserItem;\n","import UserItem from '../UserItem/UserItem';\nimport './Messages.css';\n\nconst Messages = ({ state }) => {\n  return (\n    <div className='message__item'>\n      <UserItem state={state} />\n      <div className='message__item__innerText'>\n        <p className='message__item__text'>{state.message}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Messages;\n","import UserItem from '../../UserItem/UserItem';\nimport './InvertMessage.css';\n\nconst InvertMessage = ({ state }) => {\n  return (\n    <div className='invertMessage__decoration'>\n      <div className='invertMessage__item'>\n        <div className='invertMessage__item__innerText'>\n          <p className='invertMessage__item__text'>{state.message}</p>\n        </div>\n        <UserItem state={state} />\n      </div>\n    </div>\n  );\n};\n\nexport default InvertMessage;\n","import './MessageForm.css';\nimport React from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { TextareaForMessages } from '../../common/formContrlos/formControls';\nimport { minMaxLengthCreator, norequired } from '../../utils/validators';\n\nconst MsgForm = ({ handleSubmit }) => {\n  let maxLength = minMaxLengthCreator(0, 200);\n  return (\n    <form className='messageForm__inner' onSubmit={handleSubmit}>\n      <Field\n        className='messageForm__textArea'\n        name='messageText'\n        placeholder='enter your mail...'\n        validate={[norequired, maxLength]}\n        component={TextareaForMessages}\n      />\n      <button className='messageForm__btn btn'>Send</button>\n    </form>\n  );\n};\n\nconst ReduxMessageForm = reduxForm({\n  form: 'messageForm',\n})(MsgForm);\n\nconst MessageForm = (props) => {\n  let addNewMessage = (values) => {\n    props.sendNewMessageBody(values.messageText);\n  };\n\n  return (\n    <div className='messageForm__wrapper'>\n      <ReduxMessageForm onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\nexport default MessageForm;\n","import DialogListItem from './DialogListItem/DialogListItem';\nimport Messages from './Messages/Messages';\nimport './Dialogs.css';\nimport InvertMessage from './Messages/InvertMessage/InvertMessage';\nimport MessageForm from './MessageForm/MessageForm';\n\nconst Dialogs = ({ messagesData, dialogsData, ...props }) => {\n  let dialogElements = dialogsData.map((dialog) => (\n    <DialogListItem state={dialog} key={dialog.id} />\n  ));\n  // user id emulator\n  let messageElements = messagesData.map((mail) => {\n    let j = [2, 5, 7, 3, 9, 11, 13, 15, 17];\n    for (let i = 0; i < j.length; i++) {\n      if (j[i] === mail.id) {\n        return <InvertMessage state={mail} key={mail.id} />;\n      }\n    }\n    return <Messages state={mail} key={mail.id} />;\n  });\n\n  return (\n    <div className='dialogs'>\n      <h2 className='main-page__h2'>DIALOGS</h2>\n      <div className='dialogs-wrapper'>\n        <div className='usersList-conteiner'>\n          <div className='usersList__inner'>\n            <ul>{dialogElements}</ul>\n          </div>\n        </div>\n        <div className='messages-conteiner'>\n          <MessageForm sendNewMessageBody={props.sendNewMessageBody} />\n          <div className='messages-conteiner__small'>{messageElements}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","export const getDialogsData = (state) => {\n  return state.dialogsPage.dialogsData;\n};\n\nexport const getMessagesData = (state) => {\n  return state.dialogsPage.messagesData;\n};\n","import Dialogs from './Dialogs';\nimport React from 'react';\nimport {\n  sendNewMessageBody,\n  getFriendsForDialogs,\n} from '../../redux/reducers/dialogsReducer';\nimport { connect } from 'react-redux';\nimport { withAuthReNavigate } from '../HOC/withAuthReNavigate';\nimport { compose } from 'redux';\nimport {\n  getDialogsData,\n  getMessagesData,\n} from '../../redux/selectors/dialogsSelectors';\n\nclass DialogsContainer extends React.Component {\n  componentDidMount() {\n    this.props.getFriendsForDialogs();\n  }\n\n  render() {\n    return (\n      <>\n        <Dialogs\n          {...this.props}\n          sendNewMessageBody={this.props.sendNewMessageBody}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsData: getDialogsData(state),\n    messagesData: getMessagesData(state),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    sendNewMessageBody,\n    getFriendsForDialogs,\n  }),\n  withAuthReNavigate\n)(DialogsContainer);\n"],"names":["state","name","photos","path","id","className","to","src","small","userAvatar","alt","avatar","message","ReduxMessageForm","reduxForm","form","handleSubmit","maxLength","minMaxLengthCreator","onSubmit","Field","placeholder","validate","norequired","component","TextareaForMessages","props","values","sendNewMessageBody","messageText","messagesData","dialogsData","dialogElements","map","dialog","messageElements","mail","j","i","length","getDialogsData","dialogsPage","getMessagesData","DialogsContainer","this","getFriendsForDialogs","React","compose","connect","withAuthReNavigate"],"sourceRoot":""}