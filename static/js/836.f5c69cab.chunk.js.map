{"version":3,"file":"static/js/836.f5c69cab.chunk.js","mappings":"uMAyGA,EAtFiC,SAAH,GAA2C,IAArCA,EAAM,EAANA,OAAQC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAUtD,OACE,4BACE,qCACA,SAAC,KAAM,CACLC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,QAAS,MAEXC,SAAUC,EAAAA,GACVC,SApBS,SACbC,EAAsB,GAElB,IADFC,EAAa,EAAbA,cAEFC,YAAW,WACTb,EAAOW,GACPC,GAAc,EAChB,GAAG,IACL,EAYuB,SAEhB,gBAAGE,EAAY,EAAZA,aAAY,OACd,UAAC,KAAI,YACH,4BACE,SAAC,KAAK,CACJC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZC,UAAU,uBAEZ,SAAC,KAAY,CAACF,KAAK,QAAQG,UAAU,MAAMD,UAAU,eAEvD,4BACE,SAAC,KAAK,CACJH,KAAK,WACLC,KAAK,WACLC,YAAY,WACZC,UAAU,oBACVE,aAAa,SAEf,SAAC,KAAY,CACXJ,KAAK,WACLG,UAAU,MACVD,UAAU,eAGd,iBAAKA,UAAU,iCAAgC,UAC5CjB,IAAc,gBAAKoB,IAAKpB,EAAYqB,IAAI,YACxCrB,IACC,SAAC,KAAK,CACJe,KAAK,UACLC,YAAY,8BACZE,UAAU,QACVD,UAAU,yBAIfhB,IAAa,gBAAKgB,UAAU,SAAQ,SAAEhB,KACvC,iBAAKgB,UAAU,kCAAiC,WAC9C,SAAC,KAAK,CACJH,KAAK,WACLC,KAAK,aACLG,UAAU,QACVD,UAAU,yBACV,kBAGJ,mBACEH,KAAK,SACLQ,SAAUT,EACVI,UAAU,sBAAqB,qBAIjC,gBAAKA,UAAU,sCAAqC,UAClD,SAAC,KAAO,CAACM,GAAI,IAAI,2CAEd,MAKjB,E,wCC9DA,EA7BsB,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB1B,GAAayB,EAAAA,EAAAA,IAAYE,EAAAA,IACzB1B,GAAYwB,EAAAA,EAAAA,IAAYG,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAQjB,OAFAC,EAAAA,EAAAA,YAAU,WAAO,GAAG,CAACP,IAEjBA,GAAiB,SAAC,KAAQ,CAACD,GAAI,cAGjC,4BACE,mCACA,gBAAKN,UAAU,sBAAqB,UAClC,SAAC,EAAS,CACRjB,WAAYA,EACZC,UAAWA,EACXF,OAfQ,SAACiC,GACfH,GAAS9B,EAAAA,EAAAA,IAAOiC,GAClB,QAkBF,C","sources":["componets/Login/LoginForm.tsx","componets/Login/LoginPage.tsx"],"sourcesContent":["import './Login.css'\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\nimport { FC } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { formValidatorAuth } from '../utils/validators'\n\nexport type LoginFormType = {\n  email: string\n  password: string\n  captcha: string | null\n  rememberMe: boolean\n}\n\ntype PropsType = {\n  captchaUrl: string | null\n  signIn: (formData: LoginFormType) => void\n  errorInfo: string | null\n}\n\nconst LoginForm: FC<PropsType> = ({ signIn, captchaUrl, errorInfo }) => {\n  const submit = (\n    values: LoginFormType,\n    { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\n  ) => {\n    setTimeout(() => {\n      signIn(values)\n      setSubmitting(false)\n    }, 400)\n  }\n  return (\n    <div>\n      <h2>Sign in</h2>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          rememberMe: false,\n          captcha: null,\n        }}\n        validate={formValidatorAuth}\n        onSubmit={submit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div>\n              <Field\n                type='email'\n                name='email'\n                placeholder='Email'\n                className='login-form__input'\n              />\n              <ErrorMessage name='email' component='div' className='_error' />\n            </div>\n            <div>\n              <Field\n                type='password'\n                name='password'\n                placeholder='Password'\n                className='login-form__input'\n                autoComplete='off'\n              />\n              <ErrorMessage\n                name='password'\n                component='div'\n                className='_error'\n              />\n            </div>\n            <div className='login-form__captcha__container'>\n              {captchaUrl && <img src={captchaUrl} alt='captcha' />}\n              {captchaUrl && (\n                <Field\n                  name='captcha'\n                  placeholder='Enter symbols from image...'\n                  component='input'\n                  className='login-form__input'\n                />\n              )}\n            </div>\n            {errorInfo && <div className='_error'>{errorInfo}</div>}\n            <div className='login-form__checkbox__container'>\n              <Field\n                type='checkbox'\n                name='rememberMe'\n                component='input'\n                className='login-form__checkbox'\n              />\n              remember me\n            </div>\n            <button\n              type='submit'\n              disabled={isSubmitting}\n              className='login-form__btn btn'\n            >\n              Submit\n            </button>\n            <div className='login-form__linkToSignUp__container'>\n              <NavLink to={'#'}>Forget password - Sign up</NavLink>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import './Login.css'\nimport { FC, useEffect } from 'react'\nimport LoginForm, { LoginFormType } from './LoginForm'\nimport { signIn } from '../../redux/reducers/authReducer'\nimport { Navigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  getCapthcaUrl,\n  getError,\n  getIsAuth,\n} from '../../redux/selectors/authSelectors'\n\nconst LoginPage: FC = () => {\n  const authInfo = useSelector(getIsAuth)\n  const captchaUrl = useSelector(getCapthcaUrl)\n  const errorInfo = useSelector(getError)\n\n  const dispatch = useDispatch()\n\n  const signInD = (formData: LoginFormType) => {\n    dispatch(signIn(formData) as any)\n  }\n\n  useEffect(() => {}, [authInfo])\n\n  if (authInfo) return <Navigate to={'/Profile'} />\n\n  return (\n    <div>\n      <h1>LOGIN</h1>\n      <div className='login-form__wrapper'>\n        <LoginForm\n          captchaUrl={captchaUrl}\n          errorInfo={errorInfo}\n          signIn={signInD}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"names":["signIn","captchaUrl","errorInfo","initialValues","email","password","rememberMe","captcha","validate","formValidatorAuth","onSubmit","values","setSubmitting","setTimeout","isSubmitting","type","name","placeholder","className","component","autoComplete","src","alt","disabled","to","authInfo","useSelector","getIsAuth","getCapthcaUrl","getError","dispatch","useDispatch","useEffect","formData"],"sourceRoot":""}