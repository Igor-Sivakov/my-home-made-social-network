{"version":3,"file":"static/js/149.465746a8.chunk.js","mappings":"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","sources":["componets/Users/UserProfile/UserProfile.jsx","componets/common/Pagination/Pagination.jsx","componets/Users/Users.jsx","redux/selectors/usersSelectors.js","componets/Users/UsersContainer.jsx"],"sourcesContent":["import './UserProfile.css';\nimport userAvatar from '../../../img/userAvatar.jpeg';\nimport { NavLink } from 'react-router-dom';\n\nconst UserProfile = ({\n  user: { id, photos, followed, name, status },\n  followingInProgress,\n  getUnfollow,\n  getFollow,\n}) => {\n  return (\n    <div className='friends-profile__wrapper'>\n      <div className='friends-profile__item'>\n        <NavLink to={'/Profile/' + id}>\n          <img\n            src={photos.small != null ? photos.small : userAvatar}\n            className='friends-profile__item__img'\n            alt='avatar'\n          />\n        </NavLink>\n        {followed ? (\n          <button\n            disabled={followingInProgress.some((iD) => iD === id)}\n            onClick={() => {\n              getUnfollow(id);\n            }}\n            className='friends-profile__item__btn btn'\n          >\n            Unfollow\n          </button>\n        ) : (\n          <button\n            disabled={followingInProgress.some((iD) => iD === id)}\n            onClick={() => {\n              getFollow(id);\n            }}\n            className='friends-profile__item__btn btn'\n          >\n            Follow\n          </button>\n        )}\n      </div>\n      <div className='friends-profile__info'>\n        <div className='friends-profile__info__leftSide'>\n          <p className='friends-profile__info__leftSide__name'>{name}</p>\n          <p className='friends-profile__info__leftSide__status'>\n            {status != null\n              ? status\n              : 'Hi guys! Tomorrow I will be boarding, who is with me?'}\n          </p>\n        </div>\n        <div className='friends-profile__info__rightSide'>\n          <p className='friends-profile__info__rightSide__country'>Ukrain</p>\n          <p className='friends-profile__info__rightSide__town'>Kiev</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n","import './Pagination.css';\n\nconst Pagination = ({\n  totalItemsCount,\n  pageSize,\n  currentPage,\n  onPageChanged,\n  halfPortionSize = 5,\n}) => {\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let curP = currentPage;\n  let curPF = curP - halfPortionSize < 0 ? 0 : curP - halfPortionSize;\n  let curPL = curP + halfPortionSize;\n  let slicedPages = pages.slice(curPF, curPL);\n\n  return (\n    <div className='pagination'>\n      {slicedPages.map((page) => {\n        return (\n          <div className='pagination__page' key={page}>\n            <span\n              key={page}\n              className={currentPage === page ? 'selected_page' : ''}\n              onClick={(event) => {\n                onPageChanged(page);\n              }}\n            >\n              {page}\n            </span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Pagination;\n","import './Users.css';\nimport UserProfile from './UserProfile/UserProfile';\nimport Pagination from '../common/Pagination/Pagination';\n\nconst Users = ({\n  state: { totalUsersCount, pageSize, currentPage, users, ...state },\n  onPageChanged,\n  ...props\n}) => {\n  let userProfileElement = users.map((profile) => (\n    <UserProfile\n      user={profile}\n      key={profile.id}\n      getFollow={props.getFollow}\n      getUnfollow={props.getUnfollow}\n      followingInProgress={state.followingInProgress}\n    />\n  ));\n\n  return (\n    <div className='find-friends'>\n      <h2 className='main-page__h2'>USERS</h2>\n      {userProfileElement}\n      <div className='find-friends__pageBtn__inner'>\n        <button\n          className='find-friends__pageBtn btn'\n          onClick={(event) => {\n            onPageChanged(currentPage + 1);\n          }}\n        >\n          Show more\n        </button>\n      </div>\n      <Pagination\n        totalItemsCount={totalUsersCount}\n        pageSize={pageSize}\n        currentPage={currentPage}\n        onPageChanged={onPageChanged}\n      />\n    </div>\n  );\n};\n\nexport default Users;\n","//import { createSelector } from 'reselect';\n\nexport const getUsers = (state) => {\n  return state.usersPage.usersData;\n};\n\nexport const getPageSize = (state) => {\n  return state.usersPage.pageSize;\n};\n\nexport const getTotalUsersCount = (state) => {\n  return state.usersPage.totalUsersCount;\n};\n\nexport const getcurrentPage = (state) => {\n  return state.usersPage.setCurrentPage;\n};\n\nexport const getIsFetching = (state) => {\n  return state.usersPage.isFetching;\n};\n\nexport const getFollowingInProgress = (state) => {\n  return state.usersPage.followingInProgress;\n};\n\n// example hard selector created by reselect\n/* export const getUsersSuperSelector = createSelector(\n  getUsers,\n  getIsFetching,\n  (users, isFetching) => {\n    return users.filter((u) => true);\n  }\n);\n */\n","import { connect } from 'react-redux';\nimport {\n  requestUsers,\n  getFollow,\n  getUnfollow,\n} from '../../redux/reducers/usersReduser';\nimport React from 'react';\nimport Users from './Users';\nimport Preloader from '../common/preloader/preloader';\nimport { withAuthReNavigate } from '../HOC/withAuthReNavigate';\nimport { compose } from 'redux';\nimport {\n  getcurrentPage,\n  getFollowingInProgress,\n  getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsers,\n} from '../../redux/selectors/usersSelectors';\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    let { currentPage, pageSize } = this.props;\n    this.props.requestUsers(currentPage, pageSize);\n  }\n\n  onPageChanged = (pageNumber) => {\n    let { pageSize } = this.props;\n    this.props.requestUsers(pageNumber, pageSize);\n  };\n\n  render() {\n    if (this.props.isFetching) {\n      return <Preloader />;\n    }\n    return (\n      <>\n        <Users\n          state={this.props}\n          onPageChanged={this.onPageChanged}\n          getFollow={this.props.getFollow}\n          getUnfollow={this.props.getUnfollow}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getcurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    requestUsers,\n    getFollow,\n    getUnfollow,\n  }),\n  withAuthReNavigate\n)(UsersContainer);\n"],"names":["user","id","photos","followed","name","status","followingInProgress","getUnfollow","getFollow","className","to","src","small","userAvatar","alt","disabled","some","iD","onClick","totalItemsCount","pageSize","currentPage","onPageChanged","halfPortionSize","pagesCount","Math","ceil","pages","i","push","curPF","curPL","slicedPages","slice","map","page","event","state","totalUsersCount","users","props","userProfileElement","profile","getUsers","usersPage","usersData","getPageSize","getTotalUsersCount","getcurrentPage","setCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","React","compose","connect","withAuthReNavigate"],"sourceRoot":""}